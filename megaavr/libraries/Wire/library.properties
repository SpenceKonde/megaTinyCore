name=Wire
version=2.0.10
author=@MX682X, with contributions by @SpenceKonde. Original library, mostly reimplemented, was by Arduino.
maintainer=Spence Konde <spencekonde@gmail.com>
sentence=This library allows you to communicate with I2C devices, acting as either a master, slave, or both master and slave.
paragraph=I2C, also known as IIC (or, for trademark reasons, TWI) stands for Inter-Integrated-Circuit. It is a two wire bus which can have a number of devices limited only by the overall bus capacitance. The two wires are both open drain: SCL (clock) and SDA (data) lines. During every transfer, a device operates as either a master (or "host") or slave (or "client"). Devices either drive these pins LOW or let them float, and they must be pulled up to a voltage recognized as a logic HIGH by all devices using external resistors. For testing purposes only, we provide usePullups() to enable the internal ones. The internal pullups are less than 1/3rd the strength required by the standard, and I2C may not operate reliably or at all with only internal pullups, but in simple cases, it can be used as a quick test to see if the problem is missing external pullups (if calling Wire.usePullups() fixes a problem, remove that line and correctly install external resistors). Common slave devices include temperature sensors, realtime clocks, EEPROMs and all manner of sensors. The Wire library can act as either a master or a slave device, and as of DxCore/megaTinyCore versions with the reimplemented Wire 2.0.0, can operate as both at the same time (in what is called a multi-master topology). This must be enabled from the tools submenu. Refer to the library README for detailed information about speed, limitations, pullup sizing, and enhancements to slave mode (multiple addresses, and a way to see how much the master read, enabling Wire slaves to behave more like commercial devices. Older versions, without that feature, could not implement the "register model" which is ubiquitous in commercial I2C devices. <br/> This enhanced Wire library supports the tinyAVR 0/1/2-series, megaAVR 0-series and AVR Dx-series parts. It is part of megaTinyCore and DxCore, and the library distributed with the two packages differs only in the documentation, since not all options are available on tinyAVR. <br/> Version History: <br/> Correct a regression introduced in 2.0.9 (1.5.x DxC, 2.6.x mTC) impacting master-and-slave mode. <br/>2.0.9 Implement a protection against soft-locking TWI with Stand-by/Power-down sleep<br/>2.0.8 Do away with multiple signatures for requestFrom. When they worked, it was no better than it is now, but when it didn't it wouldn't compile at all, breaking some libraries. Other assorted improvements from @MX682X. <br/>2.0.6 - Improved baud calculation. <br/>2.0.5 - Better fix for buffer issue. <br/>2.0.4 - Change buffer size as emergency fix to ensure 32b of buffer is always available. <br/>2.0.3 - Make endTransmission give correct status codes (0 = success) as return values, instead of the count of bytes. Document change. <br/>2.0.2 - Add the last two missing functions. <br/>2.0.0: Wire Master & Slave support and near total rewrite. Massive flash savings realized as well!
category=Communication
url=https://www.arduino.cc/reference/en/language/functions/communication/wire/
architectures=megaavr
